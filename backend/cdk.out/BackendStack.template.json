{
  "Resources": {
    "TodosGoogleUserPoolECBAE0F7": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_email",
              "Priority": 1
            }
          ]
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false
        },
        "AutoVerifiedAttributes": [
          "email"
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "Schema": [
          {
            "Mutable": true,
            "Name": "email",
            "Required": true
          }
        ],
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/TodosGoogleUserPool/Resource"
      }
    },
    "TodosGoogleUserPoolTodosdomain3A504839": {
      "Type": "AWS::Cognito::UserPoolDomain",
      "Properties": {
        "Domain": "muhib-todos",
        "UserPoolId": {
          "Ref": "TodosGoogleUserPoolECBAE0F7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/TodosGoogleUserPool/Todosdomain/Resource"
      }
    },
    "googleProvider892B5EB4": {
      "Type": "AWS::Cognito::UserPoolIdentityProvider",
      "Properties": {
        "ProviderName": "Google",
        "ProviderType": "Google",
        "UserPoolId": {
          "Ref": "TodosGoogleUserPoolECBAE0F7"
        },
        "AttributeMapping": {
          "email": "email",
          "given_name": "given_name",
          "phone_number": "phoneNumbers"
        },
        "ProviderDetails": {
          "client_id": "946189751283-qar9hmgh34n2k95g99bj5t21q92u612u.apps.googleusercontent.com",
          "client_secret": "vs2NiWOpk3qAdVpyS5RIdKZH",
          "authorize_scopes": "profile email openid"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/googleProvider/Resource"
      }
    },
    "todoamplifyClient6D169DFF": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": {
          "Ref": "TodosGoogleUserPoolECBAE0F7"
        },
        "AllowedOAuthFlows": [
          "implicit",
          "code"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin"
        ],
        "CallbackURLs": [
          "https://d20f4mcjylrx1z.cloudfront.net/"
        ],
        "LogoutURLs": [
          "https://d20f4mcjylrx1z.cloudfront.net/"
        ],
        "SupportedIdentityProviders": [
          {
            "Ref": "googleProvider892B5EB4"
          },
          "COGNITO"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/todoamplifyClient/Resource"
      }
    },
    "ApiForTodoB271A8A2": {
      "Type": "AWS::AppSync::GraphQLApi",
      "Properties": {
        "AuthenticationType": "API_KEY",
        "Name": "appsyncEventbridgeAPITodo",
        "XrayEnabled": true
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiForTodo/Resource"
      }
    },
    "ApiForTodoSchema14749314": {
      "Type": "AWS::AppSync::GraphQLSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiForTodoB271A8A2",
            "ApiId"
          ]
        },
        "Definition": "type Event {\n  result: String\n}\n\ntype Todo {\n  id: ID!\n  title: String!\n  user: String!\n}\n\ninput TodoInput {\n  title: String!\n  user: String!\n}\n\ntype Query {\n  getTodos: [Todo!]\n}\n\ntype Mutation {\n  addTodo(todo: TodoInput!): Event\n  deleteTodo(todoId: ID!): Event\n}"
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiForTodo/Schema"
      }
    },
    "ApiForTodoDefaultApiKey93FA0D31": {
      "Type": "AWS::AppSync::ApiKey",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiForTodoB271A8A2",
            "ApiId"
          ]
        }
      },
      "DependsOn": [
        "ApiForTodoSchema14749314"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiForTodo/DefaultApiKey"
      }
    },
    "ApiForTodoTodoAppDataSourceServiceRole8BCAF597": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiForTodo/TodoAppDataSource/ServiceRole/Resource"
      }
    },
    "ApiForTodoTodoAppDataSourceServiceRoleDefaultPolicy5C37D1C4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TodAppTable082331F4",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ApiForTodoTodoAppDataSourceServiceRoleDefaultPolicy5C37D1C4",
        "Roles": [
          {
            "Ref": "ApiForTodoTodoAppDataSourceServiceRole8BCAF597"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiForTodo/TodoAppDataSource/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "ApiForTodoTodoAppDataSource31E67B7E": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiForTodoB271A8A2",
            "ApiId"
          ]
        },
        "Name": "TodoAppDataSource",
        "Type": "AMAZON_DYNAMODB",
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "TableName": {
            "Ref": "TodAppTable082331F4"
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApiForTodoTodoAppDataSourceServiceRole8BCAF597",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiForTodo/TodoAppDataSource/Resource"
      }
    },
    "ApiForTodoeventTriggerDSServiceRole8F273DE6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiForTodo/eventTriggerDS/ServiceRole/Resource"
      }
    },
    "ApiForTodoeventTriggerDSServiceRoleDefaultPolicy06B41618": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ApiForTodoeventTriggerDSServiceRoleDefaultPolicy06B41618",
        "Roles": [
          {
            "Ref": "ApiForTodoeventTriggerDSServiceRole8F273DE6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiForTodo/eventTriggerDS/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "ApiForTodoeventTriggerDS637651F2": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiForTodoB271A8A2",
            "ApiId"
          ]
        },
        "Name": "httpDsWithEventBridge",
        "Type": "HTTP",
        "Description": "From Appsync to Eventbridge",
        "HttpConfig": {
          "AuthorizationConfig": {
            "AuthorizationType": "AWS_IAM",
            "AwsIamConfig": {
              "SigningRegion": {
                "Ref": "AWS::Region"
              },
              "SigningServiceName": "events"
            }
          },
          "Endpoint": {
            "Fn::Join": [
              "",
              [
                "https://events.",
                {
                  "Ref": "AWS::Region"
                },
                ".amazonaws.com/"
              ]
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApiForTodoeventTriggerDSServiceRole8F273DE6",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiForTodo/eventTriggerDS/Resource"
      }
    },
    "ApiForTodoQuerygetTodosResolverC9A87F1A": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiForTodoB271A8A2",
            "ApiId"
          ]
        },
        "FieldName": "getTodos",
        "TypeName": "Query",
        "DataSourceName": "TodoAppDataSource",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Scan\"}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
      },
      "DependsOn": [
        "ApiForTodoSchema14749314",
        "ApiForTodoTodoAppDataSource31E67B7E"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiForTodo/QuerygetTodosResolver/Resource"
      }
    },
    "ApiForTodoMutationaddTodoResolverFA839935": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiForTodoB271A8A2",
            "ApiId"
          ]
        },
        "FieldName": "addTodo",
        "TypeName": "Mutation",
        "DataSourceName": "httpDsWithEventBridge",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\n        \"version\": \"2018-05-29\",\n        \"method\": \"POST\",\n        \"resourcePath\": \"/\",\n        \"params\": {\n          \"headers\": {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\":\"AWSEvents.PutEvents\"\n          },\n          \"body\": {\n            \"Entries\":[\n              {\n                \"DetailType\":\"addTodo\",\n                \"Source\":\"todo-app-events\",\n                \"EventBusName\": \"default\",\n                \"Detail\": \"{\\\"title\\\":\\\"$ctx.args.todo.title\\\" , \\\"user\\\":\\\"$ctx.args.todo.user\\\"}\"\n              }\n            ]\n          }\n        }\n      }",
        "ResponseMappingTemplate": "\n        #if($ctx.error)\n        $util.error($ctx.error.message, $ctx.error.type)\n        #end\n        #if($ctx.result.statusCode == 200)\n        {\n            \"result\": \"$util.parseJson($ctx.result.body)\"\n        }\n        #else\n        $utils.appendError($ctx.result.body, $ctx.result.statusCode)\n        #end\n    "
      },
      "DependsOn": [
        "ApiForTodoeventTriggerDS637651F2",
        "ApiForTodoSchema14749314"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiForTodo/MutationaddTodoResolver/Resource"
      }
    },
    "ApiForTodoMutationdeleteTodoResolver70B28CBA": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiForTodoB271A8A2",
            "ApiId"
          ]
        },
        "FieldName": "deleteTodo",
        "TypeName": "Mutation",
        "DataSourceName": "httpDsWithEventBridge",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\n        \"version\": \"2018-05-29\",\n        \"method\": \"POST\",\n        \"resourcePath\": \"/\",\n        \"params\": {\n          \"headers\": {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\":\"AWSEvents.PutEvents\"\n          },\n          \"body\": {\n            \"Entries\":[\n              {\n                \"DetailType\":\"deleteTodo\",\n                \"Source\":\"todo-app-events\",\n                \"EventBusName\": \"default\",\n                \"Detail\": \"{\\\"todoId\\\":\\\"$ctx.args.todoId\\\"}\"\n              }\n            ]\n          }\n        }\n      }",
        "ResponseMappingTemplate": "\n        #if($ctx.error)\n        $util.error($ctx.error.message, $ctx.error.type)\n        #end\n        #if($ctx.result.statusCode == 200)\n        {\n            \"result\": \"$util.parseJson($ctx.result.body)\"\n        }\n        #else\n        $utils.appendError($ctx.result.body, $ctx.result.statusCode)\n        #end\n    "
      },
      "DependsOn": [
        "ApiForTodoeventTriggerDS637651F2",
        "ApiForTodoSchema14749314"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiForTodo/MutationdeleteTodoResolver/Resource"
      }
    },
    "TodAppTable082331F4": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "TodoTable"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "BackendStack/TodAppTable/Resource"
      }
    },
    "DynamoHandlerServiceRoleA5D84A0C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/Dynamo_Handler/ServiceRole/Resource"
      }
    },
    "DynamoHandlerServiceRoleDefaultPolicy2F296FCA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TodAppTable082331F4",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DynamoHandlerServiceRoleDefaultPolicy2F296FCA",
        "Roles": [
          {
            "Ref": "DynamoHandlerServiceRoleA5D84A0C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/Dynamo_Handler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "DynamoHandler93AC9750": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters4186e91b4b8dd632fedeb840971d5d991561eb58e9c043a6a0ffc56354115f24S3BucketCD746B09"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4186e91b4b8dd632fedeb840971d5d991561eb58e9c043a6a0ffc56354115f24S3VersionKey6630B3E7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4186e91b4b8dd632fedeb840971d5d991561eb58e9c043a6a0ffc56354115f24S3VersionKey6630B3E7"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "DynamoHandlerServiceRoleA5D84A0C",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "DYNAMO_TABLE_NAME": {
              "Ref": "TodAppTable082331F4"
            }
          }
        },
        "Handler": "dynamoHandler.handler",
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "DynamoHandlerServiceRoleDefaultPolicy2F296FCA",
        "DynamoHandlerServiceRoleA5D84A0C"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/Dynamo_Handler/Resource",
        "aws:asset:path": "asset.4186e91b4b8dd632fedeb840971d5d991561eb58e9c043a6a0ffc56354115f24",
        "aws:asset:property": "Code"
      }
    },
    "DynamoHandlerAllowEventRuleBackendStackeventConsumerRule6D53D2E28434CD42": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DynamoHandler93AC9750",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "eventConsumerRule6D0F447C",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/Dynamo_Handler/AllowEventRuleBackendStackeventConsumerRule6D53D2E2"
      }
    },
    "eventConsumerRule6D0F447C": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "todo-app-events"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "DynamoHandler93AC9750",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/eventConsumerRule/Resource"
      }
    },
    "todosBucket00E30402": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "BackendStack/todosBucket/Resource"
      }
    },
    "todosBucketPolicyFF86FE43": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "todosBucket00E30402"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": "*",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "todosBucket00E30402",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "TodosDistributionOrigin1S3Origin4E9F865F",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "todosBucket00E30402",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "todosBucket00E30402",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/todosBucket/Policy/Resource"
      }
    },
    "TodosDistributionOrigin1S3Origin4E9F865F": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for BackendStackTodosDistributionOrigin1D08CE3BD"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/TodosDistribution/Origin1/S3Origin/Resource"
      }
    },
    "TodosDistribution310B4F91": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "BackendStackTodosDistributionOrigin1D08CE3BD",
            "ViewerProtocolPolicy": "allow-all"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "todosBucket00E30402",
                  "RegionalDomainName"
                ]
              },
              "Id": "BackendStackTodosDistributionOrigin1D08CE3BD",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "TodosDistributionOrigin1S3Origin4E9F865F"
                      }
                    ]
                  ]
                }
              }
            }
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/TodosDistribution/Resource"
      }
    },
    "DeployTodoAppAwsCliLayer5200450B": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3BucketAEADE8C7"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Description": "/opt/awscli/aws"
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/DeployTodoApp/AwsCliLayer/Resource",
        "aws:asset:path": "asset.e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68.zip",
        "aws:asset:property": "Content"
      }
    },
    "DeployTodoAppCustomResourceA85269B7": {
      "Type": "Custom::CDKBucketDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn"
          ]
        },
        "SourceBucketNames": [
          {
            "Ref": "AssetParameters2b1863b9c300291ac6376aa74ecc8b44341d8ec88f590de542e62ad9070cd1a6S3BucketE645CAD6"
          }
        ],
        "SourceObjectKeys": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2b1863b9c300291ac6376aa74ecc8b44341d8ec88f590de542e62ad9070cd1a6S3VersionKeyA57FE353"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2b1863b9c300291ac6376aa74ecc8b44341d8ec88f590de542e62ad9070cd1a6S3VersionKeyA57FE353"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ],
        "DestinationBucketName": {
          "Ref": "todosBucket00E30402"
        },
        "Prune": true,
        "DistributionId": {
          "Ref": "TodosDistribution310B4F91"
        },
        "DistributionPaths": [
          "/*"
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "BackendStack/DeployTodoApp/CustomResource/Default"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "AssetParameters2b1863b9c300291ac6376aa74ecc8b44341d8ec88f590de542e62ad9070cd1a6S3BucketE645CAD6"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "AssetParameters2b1863b9c300291ac6376aa74ecc8b44341d8ec88f590de542e62ad9070cd1a6S3BucketE645CAD6"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "todosBucket00E30402",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "todosBucket00E30402",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters8bda025b845a88fbeb54ef75e52048aa9f3378463116cb413f12f6014673a59aS3BucketFD1BBE00"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters8bda025b845a88fbeb54ef75e52048aa9f3378463116cb413f12f6014673a59aS3VersionKey6E54DC76"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters8bda025b845a88fbeb54ef75e52048aa9f3378463116cb413f12f6014673a59aS3VersionKey6E54DC76"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "DeployTodoAppAwsCliLayer5200450B"
          }
        ],
        "Runtime": "python3.6",
        "Timeout": 900
      },
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
        "aws:asset:path": "asset.8bda025b845a88fbeb54ef75e52048aa9f3378463116cb413f12f6014673a59a",
        "aws:asset:property": "Code"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.79.0,@aws-cdk/assets=1.85.0,@aws-cdk/aws-applicationautoscaling=1.85.0,@aws-cdk/aws-appsync=1.85.0,@aws-cdk/aws-autoscaling=1.85.0,@aws-cdk/aws-autoscaling-common=1.85.0,@aws-cdk/aws-autoscaling-hooktargets=1.85.0,@aws-cdk/aws-certificatemanager=1.85.0,@aws-cdk/aws-cloudfront=1.85.0,@aws-cdk/aws-cloudfront-origins=1.85.0,@aws-cdk/aws-cloudwatch=1.85.0,@aws-cdk/aws-codeguruprofiler=1.85.0,@aws-cdk/aws-cognito=1.85.0,@aws-cdk/aws-dynamodb=1.85.0,@aws-cdk/aws-ec2=1.85.0,@aws-cdk/aws-ecr=1.85.0,@aws-cdk/aws-ecr-assets=1.85.0,@aws-cdk/aws-ecs=1.85.0,@aws-cdk/aws-elasticloadbalancingv2=1.85.0,@aws-cdk/aws-events=1.85.0,@aws-cdk/aws-events-targets=1.85.0,@aws-cdk/aws-iam=1.85.0,@aws-cdk/aws-kms=1.85.0,@aws-cdk/aws-lambda=1.85.0,@aws-cdk/aws-logs=1.85.0,@aws-cdk/aws-s3=1.85.0,@aws-cdk/aws-s3-assets=1.85.0,@aws-cdk/aws-s3-deployment=1.85.0,@aws-cdk/aws-servicediscovery=1.85.0,@aws-cdk/aws-sns=1.85.0,@aws-cdk/aws-sns-subscriptions=1.85.0,@aws-cdk/aws-sqs=1.85.0,@aws-cdk/aws-ssm=1.85.0,@aws-cdk/cloud-assembly-schema=1.85.0,@aws-cdk/core=1.85.0,@aws-cdk/custom-resources=1.85.0,@aws-cdk/cx-api=1.85.0,@aws-cdk/lambda-layer-awscli=1.85.0,@aws-cdk/region-info=1.85.0,jsii-runtime=node.js/v10.19.0"
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "awsuserpoolswebclientid": {
      "Value": {
        "Ref": "todoamplifyClient6D169DFF"
      }
    },
    "awsprojectregion": {
      "Value": {
        "Ref": "AWS::Region"
      }
    },
    "awsuserpoolsid": {
      "Value": {
        "Ref": "TodosGoogleUserPoolECBAE0F7"
      }
    },
    "domain": {
      "Value": {
        "Ref": "TodosGoogleUserPoolTodosdomain3A504839"
      }
    },
    "todoURL": {
      "Value": {
        "Fn::GetAtt": [
          "ApiForTodoB271A8A2",
          "GraphQLUrl"
        ]
      }
    },
    "TodoApiKey": {
      "Value": {
        "Fn::GetAtt": [
          "ApiForTodoDefaultApiKey93FA0D31",
          "ApiKey"
        ]
      }
    },
    "TodoAPIID": {
      "Value": {
        "Fn::GetAtt": [
          "ApiForTodoB271A8A2",
          "ApiId"
        ]
      }
    },
    "DistributionDomainName": {
      "Value": {
        "Fn::GetAtt": [
          "TodosDistribution310B4F91",
          "DomainName"
        ]
      }
    }
  },
  "Parameters": {
    "AssetParameters4186e91b4b8dd632fedeb840971d5d991561eb58e9c043a6a0ffc56354115f24S3BucketCD746B09": {
      "Type": "String",
      "Description": "S3 bucket for asset \"4186e91b4b8dd632fedeb840971d5d991561eb58e9c043a6a0ffc56354115f24\""
    },
    "AssetParameters4186e91b4b8dd632fedeb840971d5d991561eb58e9c043a6a0ffc56354115f24S3VersionKey6630B3E7": {
      "Type": "String",
      "Description": "S3 key for asset version \"4186e91b4b8dd632fedeb840971d5d991561eb58e9c043a6a0ffc56354115f24\""
    },
    "AssetParameters4186e91b4b8dd632fedeb840971d5d991561eb58e9c043a6a0ffc56354115f24ArtifactHash30E9CAFE": {
      "Type": "String",
      "Description": "Artifact hash for asset \"4186e91b4b8dd632fedeb840971d5d991561eb58e9c043a6a0ffc56354115f24\""
    },
    "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3BucketAEADE8C7": {
      "Type": "String",
      "Description": "S3 bucket for asset \"e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68\""
    },
    "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F": {
      "Type": "String",
      "Description": "S3 key for asset version \"e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68\""
    },
    "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68ArtifactHashD9A515C3": {
      "Type": "String",
      "Description": "Artifact hash for asset \"e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68\""
    },
    "AssetParameters8bda025b845a88fbeb54ef75e52048aa9f3378463116cb413f12f6014673a59aS3BucketFD1BBE00": {
      "Type": "String",
      "Description": "S3 bucket for asset \"8bda025b845a88fbeb54ef75e52048aa9f3378463116cb413f12f6014673a59a\""
    },
    "AssetParameters8bda025b845a88fbeb54ef75e52048aa9f3378463116cb413f12f6014673a59aS3VersionKey6E54DC76": {
      "Type": "String",
      "Description": "S3 key for asset version \"8bda025b845a88fbeb54ef75e52048aa9f3378463116cb413f12f6014673a59a\""
    },
    "AssetParameters8bda025b845a88fbeb54ef75e52048aa9f3378463116cb413f12f6014673a59aArtifactHash595EC1E7": {
      "Type": "String",
      "Description": "Artifact hash for asset \"8bda025b845a88fbeb54ef75e52048aa9f3378463116cb413f12f6014673a59a\""
    },
    "AssetParameters2b1863b9c300291ac6376aa74ecc8b44341d8ec88f590de542e62ad9070cd1a6S3BucketE645CAD6": {
      "Type": "String",
      "Description": "S3 bucket for asset \"2b1863b9c300291ac6376aa74ecc8b44341d8ec88f590de542e62ad9070cd1a6\""
    },
    "AssetParameters2b1863b9c300291ac6376aa74ecc8b44341d8ec88f590de542e62ad9070cd1a6S3VersionKeyA57FE353": {
      "Type": "String",
      "Description": "S3 key for asset version \"2b1863b9c300291ac6376aa74ecc8b44341d8ec88f590de542e62ad9070cd1a6\""
    },
    "AssetParameters2b1863b9c300291ac6376aa74ecc8b44341d8ec88f590de542e62ad9070cd1a6ArtifactHash683F2458": {
      "Type": "String",
      "Description": "Artifact hash for asset \"2b1863b9c300291ac6376aa74ecc8b44341d8ec88f590de542e62ad9070cd1a6\""
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}